{"version":3,"file":"js/898.c18a7c43.js","mappings":"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","sources":["webpack://board-games/./src/utils/useBoardGame.ts","webpack://board-games/./src/components/Sudoku.vue?5f32","webpack://board-games/./src/utils/useTimer.ts","webpack://board-games/./src/utils/solveSudoku.ts","webpack://board-games/./src/utils/solveSudokuAll.ts","webpack://board-games/./src/components/Sudoku.vue?4bf4","webpack://board-games/./src/components/Sudoku.vue"],"sourcesContent":["export const initBoard = (nRows: number, nCols: number, initNum: number | number[] = 0): number[][] => {\n  const res: number[][] = [];\n  for (let i = 0; i < nRows; i++) {\n    res[i] = [];\n    for (let j = 0; j < nCols; j++) {\n      const num = typeof initNum === 'number' ? initNum : getInitNum(initNum);\n      res[i].push(num);\n    }\n  }\n  return res;\n};\n\nconst getInitNum = (nums: number[]): number => {\n  const n = nums.length;\n  if ( n === 1) {\n    return nums[0];\n  } else {\n    const idx = Math.floor(Math.random() * n);\n    return nums[idx];\n  }\n}\n\n// 共同： stateMatrix 和 reset()\n// prevState 和 撤销（返回上一步）\n","import { createElementVNode as _createElementVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, vModelText as _vModelText, normalizeClass as _normalizeClass, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-3de782f0\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"game-wrap\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"数独\", -1))\nconst _hoisted_3 = { class: \"stack\" }\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"难度： \")\nconst _hoisted_5 = /*#__PURE__*/_createStaticVNode(\"<option value=\\\"1\\\" data-v-3de782f0>非常简单</option><option value=\\\"2\\\" data-v-3de782f0>简单</option><option value=\\\"3\\\" data-v-3de782f0>普通</option><option value=\\\"4\\\" data-v-3de782f0>困难</option><option value=\\\"5\\\" data-v-3de782f0>非常困难</option><option value=\\\"6\\\" data-v-3de782f0>空白</option>\", 6)\nconst _hoisted_11 = [\n  _hoisted_5\n]\nconst _hoisted_12 = [\"onUpdate:modelValue\", \"disabled\"]\nconst _hoisted_13 = { class: \"btn-wrap\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"div\", _hoisted_3, [\n      _createElementVNode(\"label\", null, [\n        _hoisted_4,\n        _withDirectives(_createElementVNode(\"select\", {\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.level) = $event))\n        }, _hoisted_11, 512), [\n          [_vModelSelect, _ctx.level]\n        ])\n      ]),\n      _createElementVNode(\"button\", {\n        onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.init && _ctx.init(...args)))\n      }, \"应用\"),\n      (_ctx.gameState === 'over')\n        ? (_openBlock(), _createElementBlock(\"button\", {\n            key: 0,\n            onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.startGame && _ctx.startGame(...args)))\n          }, \" 开始 \"))\n        : _createCommentVNode(\"\", true),\n      (_ctx.gameState === 'running')\n        ? (_openBlock(), _createElementBlock(\"button\", {\n            key: 1,\n            onClick: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.pausedGame && _ctx.pausedGame(...args)))\n          }, \" 暂停 \"))\n        : (_ctx.gameState === 'paused')\n          ? (_openBlock(), _createElementBlock(\"button\", {\n              key: 2,\n              onClick: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_ctx.resumeGame && _ctx.resumeGame(...args)))\n            }, \" 继续 \"))\n          : _createCommentVNode(\"\", true),\n      (_ctx.gameState !== 'over')\n        ? (_openBlock(), _createElementBlock(\"button\", {\n            key: 3,\n            onClick: _cache[5] || (_cache[5] = \n//@ts-ignore\n(...args) => (_ctx.restartGame && _ctx.restartGame(...args)))\n          }, \" 开新的一局 \"))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", null, \"累计用时：\" + _toDisplayString(_ctx.timeCounter), 1)\n    ]),\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.stateMatrix, (rowState, i) => {\n      return (_openBlock(), _createElementBlock(\"div\", {\n        class: \"row\",\n        key: i\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(rowState, (state, j) => {\n          return _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n            class: _normalizeClass([\"toggle-box\", {\n          'toggle-box--error': _ctx.errorMatrix[i][j],\n          'toggle-box--box-top': i === 0 || i === 3 || i === 6,\n          'toggle-box--box-left': j === 0 || j === 3 || j === 6,\n          'toggle-box--box-bottom': i === 8,\n          'toggle-box--box-right': j === 8,\n        }]),\n            key: j,\n            \"onUpdate:modelValue\": ($event: any) => ((_ctx.stateMatrix[i][j]) = $event),\n            type: \"number\",\n            disabled: !!_ctx.originState[i][j]\n          }, null, 10, _hoisted_12)), [\n            [\n              _vModelText,\n              _ctx.stateMatrix[i][j],\n              void 0,\n              { number: true }\n            ]\n          ])\n        }), 128))\n      ]))\n    }), 128)),\n    _createElementVNode(\"div\", _hoisted_13, [\n      _createElementVNode(\"button\", {\n        onClick: _cache[6] || (_cache[6] = \n//@ts-ignore\n(...args) => (_ctx.reset && _ctx.reset(...args)))\n      }, \"清空重来\"),\n      _createElementVNode(\"button\", {\n        onClick: _cache[7] || (_cache[7] = \n//@ts-ignore\n(...args) => (_ctx.findAllSolve && _ctx.findAllSolve(...args)))\n      }, \"提示\"),\n      _createElementVNode(\"button\", {\n        onClick: _cache[8] || (_cache[8] = \n//@ts-ignore\n(...args) => (_ctx.solve && _ctx.solve(...args)))\n      }, \"解答\")\n    ])\n  ]))\n}","import { computed, ref } from \"vue\";\n\nexport const useTimer = () => {\n  const startTime = ref(new Date().getTime());\n  const currentTime = ref(new Date().getTime());\n  const stop = ref(false);\n\n  const timeCounter = computed(() => {\n    const d = currentTime.value - startTime.value;\n    const s = Math.round(d / 1000);\n    return `${Math.floor(s / 60)}分${s % 60}秒`;\n  });\n\n  const restartTimer = () => {\n    startTime.value = new Date().getTime();\n    resumeTimer();\n  };\n\n  const stopTimer = () => {\n    stop.value = true;\n  }\n\n  const resumeTimer = () => {\n    stop.value = false;\n    requestAnimationFrame(timeCountLoop);\n  }\n\n  // 循环更新当前时间\n  const timeCountLoop = () => {\n    currentTime.value = new Date().getTime();\n    if (!stop.value) {\n      requestAnimationFrame(timeCountLoop);\n    }\n  };\n  requestAnimationFrame(timeCountLoop);\n\n  return { restartTimer, stopTimer, resumeTimer, timeCounter };\n};\n","export type MatrixType = string | number;\n\nconst getNeighborIdx = (i: number, j: number): number[][] => {\n  const getBox = (x: number) => Math.floor(x / 3);\n  const di = getBox(i) * 3;\n  const dj = getBox(j) * 3;\n  return [\n    [0, 0],\n    [0, 1],\n    [0, 2],\n    [1, 0],\n    [1, 1],\n    [1, 2],\n    [2, 0],\n    [2, 1],\n    [2, 2],\n  ].map((y) => [y[0] + di, y[1] + dj]);\n};\n\nconst getNeighborVal = (\n  matrix: MatrixType[][],\n  i: number,\n  j: number\n): number[] => {\n  const res: number[] = [];\n  const neighbors = getNeighborIdx(i, j);\n  for (const item of neighbors) {\n    let [x, y] = item;\n    res.push(+matrix[x][y]);\n  }\n  return res;\n};\n\n// 检查item在arr中是否已经存在\nconst checkScope = (\n  arr: MatrixType[],\n  item: number,\n  candidateMode: boolean\n) => {\n  if (candidateMode) {\n    return arr.includes(item);\n  } else {\n    return arr.filter((x) => +x === +item).length > 1;\n  }\n};\n\n// 检测candidate能否填入matrix[i][j]\nexport const checkNumber = (\n  matrix: MatrixType[][],\n  i: number,\n  j: number,\n  candidate: number = 999\n): boolean => {\n  const candidateMode = candidate !== 999;\n  const item = candidateMode ? candidate : +matrix[i][j];\n\n  if (item === 0) return true;\n  if (item > 9 || item < 1) return false;\n\n  // 检查同一行、同一列、九宫格是否已经存在item\n  if (\n    checkScope(matrix[i], item, candidateMode) ||\n    checkScope(\n      matrix.map((x) => x[j]),\n      item,\n      candidateMode\n    ) ||\n    checkScope(getNeighborVal(matrix, i, j), item, candidateMode)\n  ) {\n    return false;\n  }\n\n  return true;\n};\n\n// 原地遍历，试试在每个格子填入数字，一旦不可行了就返回false撤回上一步操作\nconst trySolve = (matrix: number[][]): boolean => {\n  for (const i in matrix) {\n    for (let j = 0; j < matrix[i].length; j++) {\n      // 不需要填入，直接下一格\n      if (matrix[i][j] !== 0) {\n        continue;\n      }\n\n      // 1-9，每个数字尝试一次\n      for (let k = 1; k < 10; k++) {\n        // 检查填入k是否可行，若可行，复制一份，在复制的基础上继续推演trySolve下一格\n        if (checkNumber(matrix, +i, j, k)) {\n          // 把第k个位置变为1 --> 填入数字k\n          matrix[i][j] = k;\n          if (trySolve(matrix)) {\n            return true;\n          }\n\n          // 回溯\n          matrix[i][j] = 0;\n        }\n      }\n      // 试完还没填数字\n      if (matrix[i][j] === 0) {\n        return false;\n      }\n    }\n  }\n  return true; // 填好啦\n};\n\nexport const solveSudoku = (\n  initMatrix: MatrixType[][]\n): undefined | number[][] => {\n  const matrix = initMatrix.map((row) => {\n    return row.map((item) => +item || 0);\n  });\n\n  const res = trySolve(matrix);\n\n  if (res) {\n    return matrix;\n  }\n};\n","\nexport function solveSudokuAll(board: (string|number)[][]): void {\n  const matrix = board.map((row) => {\n    return row.map((item) => +item || 0);\n  });\n\n  console.log('start');\n  const res = trySolve([...matrix], 0, 0);\n\n  console.log(res);\n  // for (const i in board) {\n  //     board[i] = res[0][i].map(x=>`${x}`);\n  // }\n};\n\nconst getNeighborVal = (matrix: number[][], i: number, j: number): number[] => {\n  const getNeighborIdx = (i: number, j: number): number[][] => {\n    const getBox = (x: number) => Math.floor(x / 3);\n    const di = getBox(i) * 3;\n    const dj = getBox(j) * 3;\n    return [\n      [0, 0],\n      [0, 1],\n      [0, 2],\n      [1, 0],\n      [1, 1],\n      [1, 2],\n      [2, 0],\n      [2, 1],\n      [2, 2],\n    ].map((y) => [y[0] + di, y[1] + dj]);\n  };\n  const res: number[] = [];\n  const neighbors = getNeighborIdx(i, j);\n  for (const item of neighbors) {\n    let [x, y] = item;\n    res.push(matrix[x][y]);\n  }\n  return res;\n};\n\n// 检查item在arr中是否已经存在\nconst checkScope = (arr: number[], item: number) => {\n  return arr.includes(item);\n};\n\n// 检测matrix[i][j]是否合法\nconst checkNumber = (\n  matrix: number[][],\n  i: number,\n  j: number,\n  candidate: number\n): boolean => {\n  const item = candidate;\n\n  // 检查同一行、同一列、九宫格是否已经存在item\n  if (\n    checkScope(matrix[i], item) ||\n    checkScope(\n      matrix.map((x) => x[j]),\n      item\n    ) ||\n    checkScope(getNeighborVal(matrix, i, j), item)\n  ) {\n    return false;\n  }\n\n  return true;\n};\n\n// 在某一格填入数字k（非原地）\nconst fillItem = (\n  matrix: number[][],\n  i: number,\n  j: number,\n  k: number\n): number[][] => {\n  // matrix[i][j] |= 1 << k;\n  const res = [];\n  for (const x in matrix) {\n    res.push([...matrix[x]]);\n  }\n  res[i][j] = k;\n  return res;\n};\n\nconst getNextIdx = (i: number, j: number): number[] => {\n  if (i + 1 < 9) {\n    return [i + 1, j];\n  } else if (j + 1 < 9) {\n    return [0, j + 1];\n  } else {\n    // 超出范围\n    return [0, 0];\n  }\n};\n\n// 找出所有可能的解\n// 遍历每一格...当发现错误时退出遍历。\n// 返回填好的新matrix\nconst trySolve = (matrix: number[][], i: number, j: number): number[][][] => {\n  const [x, y] = getNextIdx(i, j);\n\n  // 不需要填入，直接下一格\n  if (matrix[i][j] !== 0) {\n    if (x + y === 0) {\n      return [matrix]; // 遍历完成，返回当前结果\n    }\n    return trySolve(matrix, x, y);\n  }\n\n  // 需要填入数字\n\n  const res = []; // 暂存所有ok的matrix\n\n  // 1-9，每个数字尝试一次\n  for (let k = 1; k < 10; k++) {\n    // 检查填入k是否可行，若可行，复制一份，在复制的基础上继续推演trySolve下一格\n    if (checkNumber(matrix, i, j, k)) {\n      // 把第k个位置变为1 --> 填入数字k\n      const tmpMatrix = fillItem(matrix, i, j, k);\n\n      if (x + y === 0) {\n        return [tmpMatrix]; // 遍历完成，返回当前结果\n      }\n\n      res.push(...trySolve(tmpMatrix, x, y));\n    }\n  }\n\n  return res;\n};","\nimport { computed, defineComponent, ref, watch } from \"vue\";\nimport { useTimer } from \"@/utils/useTimer\";\nimport { initBoard } from \"@/utils/useBoardGame\";\nimport { checkNumber, solveSudoku } from \"@/utils/solveSudoku\";\nimport type { MatrixType } from \"@/utils/solveSudoku\";\nimport { solveSudokuAll } from \"@/utils/solveSudokuAll\";\n\nconst getRandomInt = (range = 9, scale = 1): number => {\n  return Math.floor((Math.random() * range) / scale);\n};\n\nconst initSudokuBoard = () => {\n  const matrix = initBoard(9, 9);\n  // 把第一行乱序填入1-9\n  for (let k = 1; k < 10; k++) {\n    // 随机选一个格子填数\n    let j = getRandomInt();\n    while (matrix[0][j] > 0) {\n      // 重新选格子\n      j = getRandomInt();\n    }\n    matrix[0][j] = k;\n  }\n\n  return matrix;\n};\n\nexport default defineComponent({\n  props: {\n    properties: Object,\n  },\n  setup() {\n    const { restartTimer, stopTimer, resumeTimer, timeCounter } = useTimer();\n    const [N_ROWS, N_COLS] = [9, 9];\n    const level = ref(3);\n    const gameState = ref(\"over\");\n    const stateMatrix = ref<MatrixType[][]>(initBoard(N_ROWS, N_COLS));\n    const originState = ref(stateMatrix.value);\n    const errorMatrix = computed(() => {\n      return stateMatrix.value.map((x, i) => {\n        return x.map((y, j) => {\n          const res = !checkNumber(stateMatrix.value, i, j);\n          return res;\n        });\n      });\n    });\n\n    const reset = () => {\n      restartTimer();\n      stateMatrix.value = originState.value.map((x) => x.map((y) => y));\n    };\n\n    const startGame = () => {\n      gameState.value = \"running\";\n      restartTimer();\n    };\n\n    const pausedGame = () => {\n      gameState.value = \"paused\";\n      stopTimer();\n    };\n\n    const resumeGame = () => {\n      gameState.value = \"running\";\n      resumeTimer();\n    };\n\n    const restartGame = () => {\n      stopTimer();\n      init();\n      startGame();\n    };\n\n    const init = () => {\n      const start = new Date().getTime();\n\n      // 随机开局，不一定有解 (基本上有解)\n      let matrix = initSudokuBoard();\n      let res = solveSudoku(matrix);\n      let count = 1;\n      while (!res && count < 5) {\n        matrix = initSudokuBoard();\n        res = solveSudoku(matrix);\n        count++;\n      }\n      if (res) {\n        stateMatrix.value = res.map((x) =>\n          x.map((y) => (getRandomInt(6, +level.value) ? y : \"\"))\n        ); // 可以在res的基础上挖空\n      } else {\n        stateMatrix.value = matrix;\n      }\n      originState.value = stateMatrix.value.map((x) => x.map((y) => y));\n      // restartTimer();\n\n      if (count > 1) {\n        console.log(count);\n        console.log(\"loaded, 用时\", new Date().getTime() - start);\n      }\n    };\n\n    init();\n    stopTimer();\n\n    const solve = () => {\n      const res = solveSudoku(originState.value);\n      if (res) {\n        stateMatrix.value = res;\n      } else {\n        console.log(\"此题无解\");\n      }\n    };\n\n    const findAllSolve = () => {\n      solveSudokuAll(stateMatrix.value);\n    };\n\n    const handleFinish = () => {\n      // 解答完成，本局结束\n      stopTimer();\n      console.log('解答完成！')\n    };\n\n    // 数字填完自动停止计时\n    watch(\n      stateMatrix,\n      () => {\n        for (const row of stateMatrix.value) {\n          for (const item of row) {\n            // 还有空格，未完成\n            if (!item) {\n              return;\n            }\n          }\n        }\n        if (errorMatrix.value.join(\"\").includes(\"true\")) {\n          console.log(\"还有错！\");\n        } else {\n          handleFinish();\n        }\n      },\n      { deep: true }\n    );\n\n    return {\n      level,\n      timeCounter,\n      originState,\n      stateMatrix,\n      errorMatrix,\n      init,\n      reset,\n      solve,\n      findAllSolve,\n      gameState,\n      startGame,\n      pausedGame,\n      resumeGame,\n      restartGame,\n    };\n  },\n});\n","import { render } from \"./Sudoku.vue?vue&type=template&id=3de782f0&scoped=true&ts=true\"\nimport script from \"./Sudoku.vue?vue&type=script&lang=ts\"\nexport * from \"./Sudoku.vue?vue&type=script&lang=ts\"\n\nimport \"./Sudoku.vue?vue&type=style&index=0&id=3de782f0&scoped=true&lang=scss\"\n\nimport exportComponent from \"/home/runner/work/board-game/board-game/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3de782f0\"]])\n\nexport default __exports__"],"names":["initBoard","nRows","nCols","initNum","res","i","j","num","getInitNum","push","nums","n","length","idx","Math","floor","random","_withScopeId","_hoisted_1","class","_hoisted_2","_","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_11","_hoisted_12","_hoisted_13","render","_ctx","_cache","$props","$setup","$data","$options","$event","level","onClick","args","init","gameState","key","startGame","pausedGame","resumeGame","restartGame","timeCounter","stateMatrix","rowState","state","errorMatrix","type","disabled","originState","number","reset","findAllSolve","solve","useTimer","startTime","Date","getTime","currentTime","stop","d","value","s","round","restartTimer","resumeTimer","stopTimer","requestAnimationFrame","timeCountLoop","getNeighborIdx","getBox","x","di","dj","map","y","getNeighborVal","matrix","neighbors","item","checkScope","arr","candidateMode","includes","filter","checkNumber","candidate","trySolve","k","solveSudoku","initMatrix","row","solveSudokuAll","board","console","log","fillItem","getNextIdx","tmpMatrix","getRandomInt","range","scale","initSudokuBoard","props","properties","Object","setup","N_ROWS","N_COLS","start","count","handleFinish","join","deep","__exports__"],"sourceRoot":""}