{"version":3,"file":"js/34.09e9acdd.js","mappings":"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","sources":["webpack://board-games/./src/utils/useBoardGame.ts","webpack://board-games/./src/components/LifeGame.vue?0ce5","webpack://board-games/./src/utils/utils.ts","webpack://board-games/./src/components/LifeGame.vue?235e","webpack://board-games/./src/components/LifeGame.vue"],"sourcesContent":["export const initBoard = (nRows: number, nCols: number, initNum: number | number[] = 0): number[][] => {\n  const res: number[][] = [];\n  for (let i = 0; i < nRows; i++) {\n    res[i] = [];\n    for (let j = 0; j < nCols; j++) {\n      const num = typeof initNum === 'number' ? initNum : getInitNum(initNum);\n      res[i].push(num);\n    }\n  }\n  return res;\n};\n\nconst getInitNum = (nums: number[]): number => {\n  const n = nums.length;\n  if ( n === 1) {\n    return nums[0];\n  } else {\n    const idx = Math.floor(Math.random() * n);\n    return nums[idx];\n  }\n}\n\n// 共同： stateMatrix 和 reset()\n// prevState 和 撤销（返回上一步）\n","import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5325d82a\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"game-wrap\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"生命游戏\", -1))\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"欢迎来到生命游戏自定义版！这是一个基于细胞自动机理论的益智游戏，让你在虚拟世界中观察生命的演化和变化。生命游戏起初由英国数学家约翰·康威于1970年创造，如今你可以在这里自定义初始模式并探索生命的奇妙之旅。\", -1))\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"游戏玩法说明：\")\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"strong\", null, \"初始模式设置：\"),\n  /*#__PURE__*/_createTextVNode(\" 在游戏开始时，你可以自由绘制一个初始的细胞模式。这些细胞可以是活的（表示为亮色）或死的（表示为暗色）。用你的创造力，设计一个独特的初始模式，然后点击“演化”来看看它将如何发展演化。\")\n], -1))\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"strong\", null, \"演化规则：\"),\n  /*#__PURE__*/_createTextVNode(\"游戏中的每一轮演化都根据以下规则进行： 活细胞周围有2或3个相邻的活细胞，它将继续存活。 活细胞周围有过多的相邻活细胞（超过3个），它将死亡，模拟“过度拥挤”。 死细胞周围有3个相邻的活细胞，它将复活，模拟“繁殖”。\")\n], -1))\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"strong\", null, \"观察演化：\"),\n  /*#__PURE__*/_createTextVNode(\"点击“演化”后，游戏将自动进行细胞演化。观察细胞群体如何变化，有时会形成有趣的图案、结构或者稳定的生命形式。如果你的模式最终死绝，可以尝试不同的起始模式，看看是否能够找到一个更稳定的生命形式。\")\n], -1))\nconst _hoisted_8 = [\"name\", \"onClick\"]\nconst _hoisted_9 = { class: \"stack btn-group\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _hoisted_3,\n    _createElementVNode(\"p\", null, [\n      _hoisted_4,\n      _createElementVNode(\"button\", {\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.showIntro = !_ctx.showIntro))\n      }, \"展开/收起\")\n    ]),\n    (_ctx.showIntro)\n      ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n          _hoisted_5,\n          _hoisted_6,\n          _hoisted_7\n        ], 64))\n      : _createCommentVNode(\"\", true),\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.stateMatrix, (rowState, i) => {\n      return (_openBlock(), _createElementBlock(\"div\", {\n        class: \"row\",\n        key: rowState\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(rowState, (state, j) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            class: _normalizeClass([\"toggle-box\", { 'toggle-box--dead': state === 0 }]),\n            key: state,\n            name: `${i},${j}`,\n            onClick: ($event: any) => (_ctx.toggle(i, j))\n          }, null, 10, _hoisted_8))\n        }), 128))\n      ]))\n    }), 128)),\n    _createElementVNode(\"div\", _hoisted_9, [\n      _createElementVNode(\"button\", {\n        onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.start && _ctx.start(...args)))\n      }, \"演化\"),\n      _createElementVNode(\"button\", {\n        onClick: _cache[2] || (_cache[2] = ($event: any) => (_ctx.stop = true))\n      }, \"暂停\"),\n      _createElementVNode(\"button\", {\n        onClick: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.goNext && _ctx.goNext(...args)))\n      }, \"演化一步\"),\n      _createElementVNode(\"button\", {\n        onClick: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_ctx.reset && _ctx.reset(...args)))\n      }, \"重置\")\n    ])\n  ]))\n}","export const getMatrixSum = (matrix: number[][]): number => {\n  let sum = 0;\n  for (let i = 0; i < matrix.length; i++) {\n    for (let j = 0; j < matrix[0].length; j++) {\n      sum += matrix[i][j] ?? 0;\n    }\n  }\n  return sum;\n};\n\nexport const sleep = async (t = 300) => {\n  await new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(0);\n    }, t);\n  });\n};\n\nexport const deepEqual = (arr1: any, arr2: any): boolean => {\n  return JSON.stringify(arr1) === JSON.stringify(arr2);\n};","\nimport { computed, defineComponent, ref, watchEffect } from \"vue\";\nimport { initBoard } from \"@/utils/useBoardGame\";\nimport { getMatrixSum, sleep, deepEqual } from \"@/utils/utils\";\n\nconst gameOfLife = function (board: number[][]) {\n  const sum = function (board: number[][], mid_i: number, mid_j: number) {\n    let res = 0;\n    for (let i = Math.max(0, mid_i - 1); i <= mid_i + 1; i++) {\n      for (let j = Math.max(0, mid_j - 1); j <= mid_j + 1; j++) {\n        res += board[i]?.[j] ?? 0;\n      }\n    }\n    return res;\n  };\n  const res: number[][] = [];\n  const nRows = board.length; // m >= 1\n  const nCols = board[0].length; // n <= 25\n\n  for (let i = 0; i < nRows; i++) {\n    res[i] = [];\n    for (let j = 0; j < nCols; j++) {\n      if (board[i][j] === 0) {\n        res[i].push(sum(board, i, j) === 3 ? 1 : 0);\n      } else {\n        const curSum = sum(board, i, j) - 1;\n        res[i].push(curSum === 3 || curSum === 2 ? 1 : 0);\n      }\n    }\n  }\n\n  return res;\n};\n\nexport default defineComponent({\n  props: {\n    properties: Object,\n  },\n  setup(props) {\n    const boardSize = computed(() => {\n      return [\n        props.properties?.nRows.default || 9,\n        props.properties?.nCols.default || 9,\n      ];\n    });\n    const stateMatrix = ref([[0]]);\n    const prevState = ref([[0]]);\n    const stop = ref(false);\n    const showIntro = ref(false);\n    const goNext = () => {\n      prevState.value = stateMatrix.value;\n      stateMatrix.value = gameOfLife(stateMatrix.value);\n    };\n    const start = async () => {\n      stop.value = false;\n\n      while (\n        getMatrixSum(stateMatrix.value) > 0 &&\n        !deepEqual(prevState.value, stateMatrix.value) &&\n        !stop.value\n      ) {\n        console.log(1);\n        goNext();\n        await sleep(props.properties?.speed.default);\n      }\n    };\n    const toggle = (i: number, j: number) => {\n      stateMatrix.value[i][j] = +!stateMatrix.value[i][j];\n    };\n    const reset = () => {\n      stop.value = true;\n      const [N_ROWS, N_COLS] = boardSize.value;\n      stateMatrix.value = initBoard(N_ROWS, N_COLS);\n    };\n    watchEffect(reset);\n\n    return { stateMatrix, goNext, start, toggle, reset, stop, showIntro };\n  },\n});\n","import { render } from \"./LifeGame.vue?vue&type=template&id=5325d82a&scoped=true&ts=true\"\nimport script from \"./LifeGame.vue?vue&type=script&lang=ts\"\nexport * from \"./LifeGame.vue?vue&type=script&lang=ts\"\n\nimport \"./LifeGame.vue?vue&type=style&index=0&id=5325d82a&scoped=true&lang=scss\"\n\nimport exportComponent from \"/home/runner/work/board-game/board-game/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5325d82a\"]])\n\nexport default __exports__"],"names":["initBoard","nRows","nCols","initNum","res","i","j","num","getInitNum","push","nums","n","length","idx","Math","floor","random","_withScopeId","_hoisted_1","class","_hoisted_2","_","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","render","_ctx","_cache","$props","$setup","$data","$options","onClick","$event","showIntro","key","stateMatrix","rowState","state","name","toggle","args","start","stop","goNext","reset","getMatrixSum","matrix","sum","sleep","async","t","Promise","resolve","setTimeout","deepEqual","arr1","arr2","JSON","stringify","gameOfLife","board","mid_i","mid_j","max","curSum","props","properties","Object","setup","boardSize","default","prevState","value","console","log","speed","N_ROWS","N_COLS","__exports__"],"sourceRoot":""}