"use strict";(self["webpackChunkboard_games"]=self["webpackChunkboard_games"]||[]).push([[507],{1886:function(t,e,n){n.d(e,{P:function(){return o}});const o=(t,e,n=0)=>{const o=[];for(let r=0;r<t;r++){o[r]=[];for(let t=0;t<e;t++){const t="number"===typeof n?n:l(n);o[r].push(t)}}return o},l=t=>{const e=t.length;if(1===e)return t[0];{const n=Math.floor(Math.random()*e);return t[n]}}},8507:function(t,e,n){n.r(e),n.d(e,{default:function(){return D}});var o=n(3396),l=n(7139);const r=t=>((0,o.dD)("data-v-70362b7f"),t=t(),(0,o.Cn)(),t),s={class:"game-wrap"},a=r((()=>(0,o._)("h1",null,"生命游戏",-1))),u=r((()=>(0,o._)("p",null,"欢迎来到生命游戏自定义版！这是一个基于细胞自动机理论的益智游戏，让你在虚拟世界中观察生命的演化和变化。生命游戏起初由英国数学家约翰·康威于1970年创造，如今你可以在这里自定义初始模式并探索生命的奇妙之旅。",-1))),i=(0,o.Uk)("游戏玩法说明："),c=r((()=>(0,o._)("p",null,[(0,o._)("strong",null,"初始模式设置："),(0,o.Uk)(" 在游戏开始时，你可以自由绘制一个初始的细胞模式。这些细胞可以是活的（表示为亮色）或死的（表示为暗色）。用你的创造力，设计一个独特的初始模式，然后点击“演化”来看看它将如何发展演化。")],-1))),g=r((()=>(0,o._)("p",null,[(0,o._)("strong",null,"演化规则："),(0,o.Uk)("游戏中的每一轮演化都根据以下规则进行： 活细胞周围有2或3个相邻的活细胞，它将继续存活。 活细胞周围有过多的相邻活细胞（超过3个），它将死亡，模拟“过度拥挤”。 死细胞周围有3个相邻的活细胞，它将复活，模拟“繁殖”。")],-1))),f=r((()=>(0,o._)("p",null,[(0,o._)("strong",null,"观察演化："),(0,o.Uk)("点击“演化”后，游戏将自动进行细胞演化。观察细胞群体如何变化，有时会形成有趣的图案、结构或者稳定的生命形式。如果你的模式最终死绝，可以尝试不同的起始模式，看看是否能够找到一个更稳定的生命形式。")],-1))),p=["name","onClick"],v={class:"stack btn-group"};function h(t,e,n,r,h,d){return(0,o.wg)(),(0,o.iD)("div",s,[a,u,(0,o._)("p",null,[i,(0,o._)("button",{onClick:e[0]||(e[0]=e=>t.showIntro=!t.showIntro)},(0,l.zw)(t.showIntro?"收起":"查看"),1)]),t.showIntro?((0,o.wg)(),(0,o.iD)(o.HY,{key:0},[c,g,f],64)):(0,o.kq)("",!0),((0,o.wg)(!0),(0,o.iD)(o.HY,null,(0,o.Ko)(t.stateMatrix,((e,n)=>((0,o.wg)(),(0,o.iD)("div",{class:"row",key:e},[((0,o.wg)(!0),(0,o.iD)(o.HY,null,(0,o.Ko)(e,((e,r)=>((0,o.wg)(),(0,o.iD)("div",{class:(0,l.C_)(["toggle-box",{"toggle-box--dead":0===e}]),key:e,name:`${n},${r}`,onClick:e=>t.toggle(n,r)},null,10,p)))),128))])))),128)),(0,o._)("div",v,[(0,o._)("button",{onClick:e[1]||(e[1]=(...e)=>t.start&&t.start(...e))},"演化"),(0,o._)("button",{onClick:e[2]||(e[2]=e=>t.stop=!0)},"暂停"),(0,o._)("button",{onClick:e[3]||(e[3]=(...e)=>t.goNext&&t.goNext(...e))},"演化一步"),(0,o._)("button",{onClick:e[4]||(e[4]=(...e)=>t.reset&&t.reset(...e))},"重置")])])}var d=n(4870),w=n(1886);const k=t=>{let e=0;for(let n=0;n<t.length;n++)for(let o=0;o<t[0].length;o++)e+=t[n][o]??0;return e},_=async(t=300)=>{await new Promise((e=>{setTimeout((()=>{e(0)}),t)}))},b=(t,e)=>JSON.stringify(t)===JSON.stringify(e),m=function(t){const e=function(t,e,n){let o=0;for(let l=Math.max(0,e-1);l<=e+1;l++)for(let e=Math.max(0,n-1);e<=n+1;e++)o+=t[l]?.[e]??0;return o},n=[],o=t.length,l=t[0].length;for(let r=0;r<o;r++){n[r]=[];for(let o=0;o<l;o++)if(0===t[r][o])n[r].push(3===e(t,r,o)?1:0);else{const l=e(t,r,o)-1;n[r].push(3===l||2===l?1:0)}}return n};var C=(0,o.aZ)({props:{properties:Object},setup(t){const e=(0,o.Fl)((()=>[t.properties?.nRows.default||9,t.properties?.nCols.default||9])),n=(0,d.iH)([[0]]),l=(0,d.iH)([[0]]),r=(0,d.iH)(!1),s=(0,d.iH)(!1),a=()=>{l.value=n.value,n.value=m(n.value)},u=async()=>{r.value=!1;while(k(n.value)>0&&!b(l.value,n.value)&&!r.value)console.log(1),a(),await _(t.properties?.speed.default)},i=(t,e)=>{n.value[t][e]=+!n.value[t][e]},c=()=>{r.value=!0;const[t,o]=e.value;n.value=(0,w.P)(t,o)};return(0,o.m0)(c),{stateMatrix:n,goNext:a,start:u,toggle:i,reset:c,stop:r,showIntro:s}}}),x=n(89);const y=(0,x.Z)(C,[["render",h],["__scopeId","data-v-70362b7f"]]);var D=y}}]);
//# sourceMappingURL=507.f46f3903.js.map