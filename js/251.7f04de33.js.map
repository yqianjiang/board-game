{"version":3,"file":"js/251.7f04de33.js","mappings":"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","sources":["webpack://board-games/./src/utils/useBoardGame.ts","webpack://board-games/./src/components/LightGame.vue?e622","webpack://board-games/./src/utils/solveLightGame.ts","webpack://board-games/./src/components/LightGame.vue?bb77","webpack://board-games/./src/components/LightGame.vue"],"sourcesContent":["export const initBoard = (nRows: number, nCols: number, initNum: number | number[] = 0): number[][] => {\n  const res: number[][] = [];\n  for (let i = 0; i < nRows; i++) {\n    res[i] = [];\n    for (let j = 0; j < nCols; j++) {\n      const num = typeof initNum === 'number' ? initNum : getInitNum(initNum);\n      res[i].push(num);\n    }\n  }\n  return res;\n};\n\nconst getInitNum = (nums: number[]): number => {\n  const n = nums.length;\n  if ( n === 1) {\n    return nums[0];\n  } else {\n    const idx = Math.floor(Math.random() * n);\n    return nums[idx];\n  }\n}\n\n// 共同： stateMatrix 和 reset()\n// prevState 和 撤销（返回上一步）\n","import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-1f08bd12\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"game-wrap\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"关灯游戏\", -1))\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"游戏板上有一组灯泡，有些是亮的（黄色），有些是暗的（灰色）。\", -1))\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"你的目标是通过点击它们，改变它们的状态，把所有的灯泡都熄灭。但要注意，每次点击一个灯泡都会影响其上、下、左、右相邻的灯泡。\", -1))\nconst _hoisted_5 = [\"onClick\"]\nconst _hoisted_6 = { class: \"stack btn-group\" }\nconst _hoisted_7 = { class: \"history-text\" }\nconst _hoisted_8 = {\n  key: 0,\n  class: \"history-text\"\n}\nconst _hoisted_9 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, \"参考答案\", -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _hoisted_3,\n    _hoisted_4,\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.stateMatrix, (rowState, i) => {\n      return (_openBlock(), _createElementBlock(\"div\", {\n        class: \"row\",\n        key: rowState\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(rowState, (state, j) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            class: _normalizeClass([\"toggle-box\", {\n          'toggle-box--dead': state === 0,\n        }]),\n            key: i + j,\n            onClick: ($event: any) => (_ctx.toggle(i, j))\n          }, null, 10, _hoisted_5))\n        }), 128))\n      ]))\n    }), 128)),\n    _createElementVNode(\"div\", _hoisted_6, [\n      _createElementVNode(\"button\", {\n        onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.init && _ctx.init(...args)))\n      }, \"随机开局\"),\n      _createElementVNode(\"button\", {\n        onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.reset && _ctx.reset(...args)))\n      }, \"灯全亮开局\"),\n      (_ctx.solutions[0][0][0])\n        ? (_openBlock(), _createElementBlock(\"button\", {\n            key: 0,\n            onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.autoSolve && _ctx.autoSolve(...args)))\n          }, \"自动解答\"))\n        : (_openBlock(), _createElementBlock(\"button\", {\n            key: 1,\n            onClick: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.showSolution && _ctx.showSolution(...args)))\n          }, \"显示答案\"))\n    ]),\n    _createElementVNode(\"div\", _hoisted_7, \"操作历史\" + _toDisplayString(\"\\n\" + _ctx.history.join(\"\\n\")), 1),\n    (_ctx.solutions[0][0][0])\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n          _hoisted_9,\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.solutions, (solution) => {\n            return (_openBlock(), _createElementBlock(\"div\", { key: solution }, _toDisplayString(solution.join(\"\\n\") + \"\\n---\\n\"), 1))\n          }), 128))\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","// 检测某个matrix是否已解出\nconst checkSolve = (matrix: number[]): boolean => {\n  return +matrix.join(\"\") === 0;\n};\n\n// 翻转某一格的状态\nconst toggleItem = (\n  matrix: number[],\n  nCols: number,\n  i: number,\n  j: number\n): void => {\n  matrix[i] ^= 1 << (nCols - 1 - j);\n};\n\nconst toggle = (\n  matrix: number[],\n  action: number[],\n  nCols: number,\n  i: number,\n  j: number\n): void => {\n  toggleItem(action, nCols, i, j);\n  const neighbors = [\n    [0, 0],\n    [0, -1],\n    [0, 1],\n    [-1, 0],\n    [1, 0],\n  ];\n  for (const item of neighbors) {\n    let [x, y] = item;\n    x = x + i;\n    y = y + j;\n    if (x >= 0 && y >= 0 && x < matrix.length && y < nCols) {\n      toggleItem(matrix, nCols, x, y);\n    }\n  }\n};\n\n// 根据第一行填充剩下的（根据matrix现有状态改变matrix，并记录在action中）\nconst complete = (matrix: number[], action: number[], nCols: number): void => {\n  for (let i = 1; i < matrix.length; i++) {\n    for (let j = 0; j < nCols; j++) {\n      if ((matrix[i - 1] & (1 << (nCols - 1 - j))) > 0) {\n        // 若matrix[i - 1]从左到右的第j位是1\n        toggle(matrix, action, nCols, i, j);\n      }\n    }\n  }\n};\n\nconst trySolve = (\n  matrix: number[],\n  action: number[],\n  nCols: number,\n  i: number,\n  j: number,\n  click: boolean\n): number[][] => {\n  if (click) {\n    toggle(matrix, action, nCols, i, j);\n  }\n\n  if (j < nCols - 1) {\n    return [\n      ...trySolve([...matrix], [...action], nCols, i, j + 1, true),\n      ...trySolve([...matrix], [...action], nCols, i, j + 1, false),\n    ];\n  } else {\n    // 遍历到第一行的最后一个，可以补全剩余的\n    complete(matrix, action, nCols);\n\n    // 若有解，返回解\n    return checkSolve(matrix) ? [action] : [];\n  }\n};\n\nexport const solve = (initMatrix?: number[][]): number[][] => {\n  const nCols = initMatrix?.[0].length || 5;\n  const matrix = initMatrix\n    ? initMatrix.map((x) => parseInt(x.join(\"\"), 2))\n    : [31, 31, 31, 31, 31];\n  const actions = initMatrix ? [initMatrix.map((x) => 0)] : [[0, 0, 0, 0, 0]];\n  for (const click of [true, false]) {\n    const action = trySolve([...matrix], [...actions[0]], nCols, 0, 0, click);\n    if (action) {\n      actions.push(...action);\n    }\n  }\n  return actions.slice(1);\n};\n","\nimport { defineComponent, ref } from \"vue\";\nimport { initBoard } from \"@/utils/useBoardGame\";\nimport { solve } from \"@/utils/solveLightGame\";\n\nexport default defineComponent({\n  props: {\n    properties: Object,\n  },\n  setup() {\n    const [N_ROWS, N_COLS] = [5, 5];\n    const stateMatrix = ref(initBoard(N_ROWS, N_COLS, 1));\n    const history = ref(initBoard(N_ROWS, N_COLS));\n    const solutions = ref([[[\"\"]]]);\n    const neighbors = [\n      [0, 0],\n      [0, -1],\n      [0, 1],\n      [-1, 0],\n      [1, 0],\n    ];\n    const toggle = (i: number, j: number) => {\n      history.value[i][j] = history.value[i][j] ? 0 : 1;\n      for (const item of neighbors) {\n        let [x, y] = item;\n        x = x + i;\n        y = y + j;\n        if (x >= 0 && y >= 0 && x < N_ROWS && y < N_COLS) {\n          stateMatrix.value[x][y] = +!stateMatrix.value[x][y];\n        }\n      }\n    };\n    const reset = () => {\n      history.value = initBoard(N_ROWS, N_COLS);\n      stateMatrix.value = initBoard(N_ROWS, N_COLS, 1);\n      solutions.value = [[[\"\"]]];\n    };\n    const init = () => {\n      reset();\n      // 随机开局，不一定有解\n      let matrix = initBoard(N_ROWS, N_COLS, [0, 1]);\n      let res = solve(matrix);\n      while (!res[0]) {\n        matrix = initBoard(N_ROWS, N_COLS, [0, 1]);\n        res = solve(matrix);\n      }\n      stateMatrix.value = matrix;\n    };\n    init();\n    // 根据第一行填充剩下的\n    const complete = () => {\n      for (let i = 1; i < stateMatrix.value.length; i++) {\n        for (const j in stateMatrix.value[i]) {\n          if (stateMatrix.value[i - 1][j]) {\n            toggle(i, +j); // 目标让值为0\n          }\n        }\n      }\n    };\n    const showSolution = () => {\n      const res = solve(stateMatrix.value);\n      if (res[0]) {\n        solutions.value = res.map((x) =>\n          x.map((y) => {\n            let yy = y.toString(2);\n            while (yy.length < stateMatrix.value[0].length) {\n              yy = \"0\" + yy;\n            }\n            return yy.split(\"\");\n          })\n        );\n      } else {\n        console.log(\"此局无解\");\n      }\n    };\n    const autoSolve = () => {\n      const A = solutions.value[0];\n      for (let i = 0; i < stateMatrix.value.length; i++) {\n        for (const j in stateMatrix.value[i]) {\n          if (A[i][+j] == \"1\") {\n            toggle(i, +j);\n          }\n        }\n      }\n    };\n    return {\n      stateMatrix,\n      toggle,\n      reset,\n      init,\n      complete,\n      showSolution,\n      autoSolve,\n      history,\n      solutions,\n    };\n  },\n});\n","import { render } from \"./LightGame.vue?vue&type=template&id=1f08bd12&scoped=true&ts=true\"\nimport script from \"./LightGame.vue?vue&type=script&lang=ts\"\nexport * from \"./LightGame.vue?vue&type=script&lang=ts\"\n\nimport \"./LightGame.vue?vue&type=style&index=0&id=1f08bd12&scoped=true&lang=scss\"\n\nimport exportComponent from \"/home/runner/work/board-game/board-game/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1f08bd12\"]])\n\nexport default __exports__"],"names":["initBoard","nRows","nCols","initNum","res","i","j","num","getInitNum","push","nums","n","length","idx","Math","floor","random","_withScopeId","_hoisted_1","class","_hoisted_2","_","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","key","_hoisted_9","render","_ctx","_cache","$props","$setup","$data","$options","stateMatrix","rowState","state","onClick","$event","toggle","args","init","reset","solutions","autoSolve","showSolution","history","join","solution","checkSolve","matrix","toggleItem","action","neighbors","item","x","y","complete","trySolve","click","solve","initMatrix","map","parseInt","actions","slice","props","properties","Object","setup","N_ROWS","N_COLS","value","yy","toString","split","console","log","A","__exports__"],"sourceRoot":""}